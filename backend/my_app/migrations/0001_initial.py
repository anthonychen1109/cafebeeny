# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2018-01-09 05:03
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
                ('url', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lang_name', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme_name', models.CharField(max_length=20)),
                ('theme_ind', models.CharField(max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Topics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic_name', models.CharField(max_length=20)),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='lang_id',
            field=models.ManyToManyField(related_name='theme', to='my_app.Language'),
        ),
        migrations.AddField(
            model_name='article',
            name='theme_id',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='theme', to='my_app.Theme'),
        ),
        migrations.AddField(
            model_name='article',
            name='topic_id',
            field=models.ManyToManyField(related_name='topic', to='my_app.Topics'),
        ),
    ]
